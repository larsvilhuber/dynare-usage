
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Process downloaded data
> 
> source(file.path(rprojroot::find_root(rprojroot::has_file("pathconfig.R")),"pathconfig.R"),echo=FALSE)
> source(file.path(programs,"config.R"), echo=FALSE)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: stringr
Loading required package: devtools
Loading required package: usethis
Loading required package: rprojroot
Loading required package: tictoc
Loading required package: DBI
Loading required package: RSQLite
Loading required package: tidyr
> source(file.path(programs,"libraries.R"), echo=FALSE)
> 
> # exclusions to not consider
> 
> exclusions.ext <- c("eps","pdf","doc","docx","ps","csv","dta","tex")
> inclusions.ext <- c("mod")
> 
> files_db <- dbConnect(RSQLite::SQLite(), kranz.sql)
> articles_db <- dbConnect(RSQLite::SQLite(), kranz.sql2)
> 
> # ingest the files db
> # files only, filter out directories
> dbGetQuery(files_db,"SELECt * FROM files WHERE file_type != '' ;") %>%
+ 	filter(!file_type %in% exclusions.ext) %>%
+   mutate(present_dynare=file_type %in% inclusions.ext) -> files_dynare
> names(files_dynare)
[1] "id"             "file"           "file_type"      "kb"            
[5] "nested"         "present_dynare"
> head(files_dynare)
            id                                             file file_type
1 aer_108_12_2         Codes and Data/AER-2015-1510R2_Shapley.m         m
2 aer_108_12_2                      Codes and Data/obfn_other.m         m
3 aer_108_12_2               Codes and Data/data_est_01212015.m         m
4 aer_108_12_2          Codes and Data/AER-2015-1510R2_pspp.mod       mod
5 aer_108_12_2 Codes and Data/AER-2015-1510R2_counterfactuals.m         m
6 aer_108_12_2         Codes and Data/AER-2015-1510R2_results.m         m
      kb nested present_dynare
1 28.733      0          FALSE
2  0.264      0          FALSE
3  2.513      0          FALSE
4 12.900      0           TRUE
5 36.860      0          FALSE
6 25.275      0          FALSE
> nrow(distinct(files_dynare,id))
[1] 8031
> 
> head(files_dynare %>% filter(present_dynare))
             id                                                 file file_type
1  aer_108_12_2              Codes and Data/AER-2015-1510R2_pspp.mod       mod
2  aer_108_12_2         Codes and Data/pspp_experiments_07262016.mod       mod
3 aer_108_11_10              publiccode++/CCHH_Code++/CCHH_EZBKK.mod       mod
4 aer_108_11_10 publiccode++/CCHH_Code++/CCHH_EZBKK_withDividend.mod       mod
5 aejmac_10_4_2               data/general_bond_labor_estimation.mod       mod
6 aejmac_10_4_2                                    data/baseline.mod       mod
      kb nested present_dynare
1 12.900      0           TRUE
2 11.389      0           TRUE
3  9.133      0           TRUE
4  9.742      0           TRUE
5  8.676      0           TRUE
6  7.285      0           TRUE
> 
> # get the articles
> articles <- dbGetQuery(articles_db,"SELECt id,year,date,journ FROM article;")
> # number of articles
> nrow(distinct(articles,id))
[1] 11051
> 
> # merge to article db to get journals
> # id|year|date|journ|title|vol|issue|artnum|article_url|
> 
> 	left_join(articles,files_dynare,
+ 		 by="id") -> analysis_dynare
> 	
> # number of articles in the merged db
> nrow(distinct(analysis_dynare,id))
[1] 11051
> 	
> 
> analysis_dynare %>%
+ 	group_by(id) %>%
+ 	summarize( present_dynare=max(present_dynare,na.rm = FALSE)) %>%
+   mutate(present_dynare = replace_na(present_dynare,0)) %>%
+ 	ungroup() %>%
+ 	 summarize(n=n(),
+             dynare_n=sum(present_dynare)) %>%
+        mutate(dynare_pct = 100 * dynare_n/n)
# A tibble: 1 × 3
      n dynare_n dynare_pct
  <int>    <int>      <dbl>
1 11051      190       1.72
> 
> # by journal
> analysis_dynare %>% 
+         group_by(journ,id) %>%
+         summarize( present_dynare=max(present_dynare,na.rm = FALSE)) %>%
+         mutate(present_dynare = replace_na(present_dynare,0)) %>%
+         ungroup() %>%
+         group_by(journ) %>%
+ 	summarize(n=n(),
+                          dynare_n=sum(present_dynare)) %>%
+        mutate(dynare_pct = 100 * dynare_n/n)
`summarise()` has grouped output by 'journ'. You can override using the
`.groups` argument.
# A tibble: 17 × 4
   journ      n dynare_n dynare_pct
   <chr>  <int>    <int>      <dbl>
 1 aejapp   611        0      0    
 2 aejmac   510       61     12.0  
 3 aejmic   491        5      1.02 
 4 aejpol   637        3      0.471
 5 aer     3613       45      1.25 
 6 aeri     102        1      0.980
 7 ecta     317       16      5.05 
 8 jaere    171        0      0    
 9 jeea     300        9      3    
10 jep      569        1      0.176
11 jole     210        0      0    
12 jpe      308        9      2.92 
13 ms       435        2      0.460
14 pandp    467        6      1.28 
15 qje      259        1      0.386
16 restat  1246       11      0.883
17 restud   805       20      2.48 
> 
> # first and last year
> max(articles$year)
[1] 2023
> min(articles$year)
[1] 2005
> 
> proc.time()
   user  system elapsed 
  6.778   1.618   6.755 
